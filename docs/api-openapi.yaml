openapi: 3.0.0
info:
  title: Mirronline Management API
  version: 1.0.0

servers:
  - url: http://127.0.0.1:8000

components:
  securitySchemes:
    apikeyAuth:
      type: http
      scheme: apikey

security:
  - apikeyAuth: []

paths:
  /api/article:
    post:
      tags:
        - article
      summary: Creates a new article.
      description: Creates a new article with title, content, image, and associated newspaper ID.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: The image of the article.
      parameters:
        - name: title
          in: query
          schema:
            type: string
          description: The title of the article.
          example: "Article on abortion rights"
        - name: content
          in: query
          schema:
            type: string
          description: The content of the article.
          example: "This is the detailed content of the article."
        - name: news_paper_id
          in: query
          schema:
            type: integer
          description: The ID of the newspaper associated with the article.
          example: 123
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  articleId:
                    type: integer
                    description: The ID of the created article.
                    example: 42

    delete:
      tags:
        - article
      summary: Deletes an existing article.
      description: Deletes an article by its ID.
      parameters:
        - name: articleId
          in: query
          schema:
            type: integer
          description: The ID of the article to be deleted.
          example: 42
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message.
                    example: "Article deleted successfully."

  /api/user:
    post:
      tags:
        - default
      summary: Creates a new user and associated profile.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      parameters:
        - name: username
          in: query
          schema:
            type: string
          description: The username of the user.
          example: Matella
        - name: password
          in: query
          schema:
            type: string
          description: The password of the user.
          example: test
        - name: email
          in: query
          schema:
            type: string
          description: The email of the user.
          example: matella@example.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/profile/relationship:
    post:
      tags:
        - default
      summary: Creates a new relationship between two profiles.
      parameters:
        - name: profileId1
          in: query
          schema:
            type: integer
          description: First profile ID.
          example: "1"
        - name: profileId2
          in: query
          schema:
            type: integer
          description: Second profile ID.
          example: "9"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    delete:
      tags:
        - default
      summary: Deletes a relationship between two profiles.
      parameters:
        - name: profileId1
          in: query
          schema:
            type: integer
          description: First profile ID.
          example: "1"
        - name: profileId2
          in: query
          schema:
            type: integer
          description: Second profile ID.
          example: "9"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/profile/post:
    post:
      tags:
        - default
      summary: Creates a new comment.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The text content of the comment.
      parameters:
        - name: profileId
          in: query
          schema:
            type: integer
          description: Profile ID of the author.
          example: "15"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    delete:
      tags:
        - default
      summary: Deletes a post.
      parameters:
        - name: postId
          in: query
          schema:
            type: integer
          description: Post ID to be deleted.
          example: "18"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/advertisement:
    post:
      tags:
        - default
      summary: Creates a new advertisement.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Advertisement image.
      parameters:
        - name: text
          in: query
          schema:
            type: string
          description: Text content of the advertisement.
          example: "This is the advertisement text."
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    delete:
      tags:
        - default
      summary: Deletes an advertisement.
      parameters:
        - name: adId
          in: query
          schema:
            type: integer
          description: Advertisement ID to be deleted.
          example: "4"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
